
Настройки 

1) git config --global user.name "имя в Git hab"
2) git config --global user.email "email в Git hab"
3) git version- проверка, что данные внесены


Создать Shh key
1) ssh-keygen -t rsa -C "Имя на Github" 
2)  проходим по пути указанном в ответе  «id-rsa     pub»  и открываем файл и копируем ключ.


       

Загрузка локального репозитория файла на Git hab.


1) git add название-файла - подготовка файла для загрузки на удаленный репозиторий git hab.
	git add .   - подготовка всех изменений для загрузки на удаленный репозиторий git hab

2) git commit -m "Комментарий" - подготовка файла для загрузки на удаленный репозиторий.
	git commit -am "Комментарий"- коммитит все изменения.	

3) git push- отправка файла на удалееный репозиторий.




Загрузка с удаленного сервера на локальный компьютер.


git fetch - получение изменений с сервера для синхронизации.

git pull - загрузка изменений на локальный репозиторий.




1) git version- версия продукта.

2) git help- справочник команд.

3) git clone адрес папки с git hab - клонирование удаленного репозитория на локальный компьютер

4) git status - проверка локального репозитория на изменения.

5) git remote - выведет названия удаленных репозиториев.

6) git log  - просмотр всех коммитов

7) git log --author имя-автора  - просмотр коммитов определенного автора

	git log --author Annett-2601

8) git show -показывает последний коммит

9) git blame название_файла - просмотр всех изменений коммитов файла
	git blame CommandsLinux.txt

10) git blame название-файла |grep имя-пользователя  -просмотр всех изменений файла которые сделала определенный пользователь
	git blame CommandsLinux.txt |grep annette-2601

11) git reset HEAD~1 - отмена последнего коммита.
12) git checkout название файла  - отмена последнего изменения


Работа с ветками

1) git checkout -b название_ветки - создать ветку
	git checkout -b second

2) git название-ветки -переход в эту ветку.
	git branch

3) git push -u origin название_ветки  - ветка, которую будем коммитить








